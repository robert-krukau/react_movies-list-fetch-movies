{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovie","title","fetch","then","result","ok","Error","status","statusText","json","FindMovie","addToList","useState","setTitle","foundedMovie","setFoundedMovie","error","setError","findMovie","a","foundMovie","Response","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","classNames","value","onChange","target","onClick","App","setMovies","find","item","prevMovie","ReactDOM","render","document","getElementById"],"mappings":"iUAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,+CCXRC,EAAW,SAACC,GACvB,OAAOC,MAAM,GAAD,OAHE,4CAGF,aAAgBD,IACzBE,MAAK,SAAAC,GACJ,IAAKA,EAAOC,GACV,MAAM,IAAIC,MAAJ,UAAaF,EAAOG,OAApB,cAAgCH,EAAOI,aAG/C,OAAOJ,EAAOK,WCDPC,EAA6B,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC3C,EAA0BC,mBAAS,IAAnC,mBAAOX,EAAP,KAAcY,EAAd,KACA,EAAwCD,mBAAuB,MAA/D,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAA0BH,mBAAS,IAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAYMC,EAAS,uCAAG,4BAAAC,EAAA,sEACSnB,EAASC,GADlB,UAGY,WAFtBmB,EADU,QAGDC,SAHC,uBAIdN,EAAgB,MAChBE,EAAS,iCAAD,OAAkChB,EAAlC,MALM,0BAUhBc,EAAgBK,GAChBH,EAAS,IAXO,2CAAH,qDAcf,OACE,qCACE,uBACE3B,UAAU,aACVgC,SAAU,SAACC,GACTA,EAAMC,iBA5BRV,GACFH,EAAUG,GAGZD,EAAS,IACTI,EAAS,IACTF,EAAgB,OAmBd,UAOE,sBAAKzB,UAAU,QAAf,UACE,wBACEA,UAAU,QACVmC,QAAQ,cAFV,wBAKE,qBAAKnC,UAAU,UAAf,SACE,uBACEoC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZtC,UAAWuC,IAAW,QAAS,CAAE,YAAab,IAC9Cc,MAAO7B,EACP8B,SAAU,SAACR,GAAD,OAAWV,EAASU,EAAMS,OAAOF,eAKjD,mBAAGxC,UAAU,iBAAb,SACG0B,OAIL,sBAAK1B,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEoC,KAAK,SACLpC,UAAU,kBACV2C,QAASf,EAHX,4BASF,qBAAK5B,UAAU,UAAf,SACE,wBACEoC,KAAK,SACLpC,UAAU,oBAFZ,qCAUN,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCwB,GAAgB,cAAC,EAAD,CAAWzB,MAAOyB,WC1F9BoB,EAAgB,WAC3B,MAA4BtB,mBAAkB,IAA9C,mBAAOf,EAAP,KAAesC,EAAf,KAUA,OACE,sBAAK7C,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWqB,UAdY,SAACtB,GACxBA,IACGQ,EAAOuC,MAAK,SAAAC,GAAI,OAAIA,EAAKtC,SAAWV,EAAMU,WAC7CoC,GAAU,SAAAG,GAAS,4BAAQA,GAAR,CAAmBjD,iBCP9CkD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f0862e14.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","// https://www.omdbapi.com/?apikey=cc6f63d4&t=[title]\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=cc6f63d4&';\n\nexport const getMovie = (title: string) => {\n  return fetch(`${API_URL}t=${title}`)\n    .then(result => {\n      if (!result.ok) {\n        throw new Error(`${result.status} - ${result.statusText}`);\n      }\n\n      return result.json();\n    });\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api/api';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  addToList: AddToList;\n}\n\nexport const FindMovie: React.FC<Props> = ({ addToList }) => {\n  const [title, setTitle] = useState('');\n  const [foundedMovie, setFoundedMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState('');\n\n  const addMovie = () => {\n    if (foundedMovie) {\n      addToList(foundedMovie);\n    }\n\n    setTitle('');\n    setError('');\n    setFoundedMovie(null);\n  };\n\n  const findMovie = async () => {\n    const foundMovie = await getMovie(title);\n\n    if (foundMovie.Response === 'False') {\n      setFoundedMovie(null);\n      setError(`Cannot find movie with title \"${title}\"`);\n\n      return;\n    }\n\n    setFoundedMovie(foundMovie);\n    setError('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          addMovie();\n        }}\n      >\n        <div className=\"field\">\n          <label\n            className=\"label\"\n            htmlFor=\"movie-title\"\n          >\n            Movie title\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={classNames('input', { 'is-danger': error })}\n                value={title}\n                onChange={(event) => setTitle(event.target.value)}\n              />\n            </div>\n          </label>\n\n          <p className=\"help is-danger\">\n            {error}\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {foundedMovie && <MovieCard movie={foundedMovie} />}\n      </div>\n    </>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addToList: AddToList = (movie) => {\n    if (movie) {\n      if (!movies.find(item => item.imdbID === movie.imdbID)) {\n        setMovies(prevMovie => [...prevMovie, movie]);\n      }\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addToList={addToList} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}